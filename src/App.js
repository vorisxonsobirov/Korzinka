// App.jsx
import React, { useState, useEffect } from 'react';
import ProductList from './components/Product';
import Cart from './components/Cart';
import Auth from './components/Auth';
import './App.css';

const App = () => {
  const [cart, setCart] = useState([]); // –ö–æ—Ä–∑–∏–Ω–∞
  const [user, setUser] = useState(null); // –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å

  // –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  useEffect(() => {
    const savedUser = localStorage.getItem('loggedUser');
    if (savedUser) setUser(JSON.parse(savedUser));
  }, []);

  // –õ–æ–≥–∏–Ω
  const handleLogin = (userData) => {
    setUser(userData);
    localStorage.setItem('loggedUser', JSON.stringify(userData));
  };

  // –í—ã—Ö–æ–¥
  const handleLogout = () => {
    setUser(null);
    localStorage.removeItem('loggedUser');
  };

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
  const addToCart = (product) => {
    setCart(prev => {
      const found = prev.find(item => item.id === product.id);
      return found
        ? prev.map(item =>
            item.id === product.id
              ? { ...item, quantity: item.quantity + 1 }
              : item
          )
        : [...prev, { ...product, quantity: 1 }];
    });
  };

  // –£–º–µ–Ω—å—à–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
  const decreaseQty = (id) => {
    setCart(prev =>
      prev
        .map(item =>
          item.id === id ? { ...item, quantity: item.quantity - 1 } : item
        )
        .filter(item => item.quantity > 0)
    );
  };

  // –û–±—â–∞—è —Å—É–º–º–∞
  const total = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);

  return (
    <div className="container">
      {/* –ï—Å–ª–∏ –≤–æ—à—ë–ª ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∞–≥–∞–∑–∏–Ω */}
      {user ? (
        <>
          <div className="header">
            <h1>–ü—Ä–∏–≤–µ—Ç, {user.username} üëã</h1>
            <button onClick={handleLogout} className="logout-btn">–í—ã–π—Ç–∏</button>
          </div>
          <ProductList addToCart={addToCart} />
          <Cart cart={cart} addToCart={addToCart} decreaseQty={decreaseQty} total={total} />
        </>
      ) : (
        // –ï—Å–ª–∏ –Ω–µ –≤–æ—à—ë–ª ‚Äî —Ñ–æ—Ä–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        <Auth onLogin={handleLogin} />
      )}
    </div>
  );
};

export default App;
